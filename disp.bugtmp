### gamma(shape, rate); rate = shape/mu
### beta: mean = a/(a+b) = shape = ab/(a+b)
### a = shape/mean; b=shape/(1-mean)

model{
	repMean ~ dbeta(0.1, 0.1)
	repShape ~ dgamma(0.01, 0.01)
	incShape ~  dgamma(0.01, 0.01)

	for (j in 1:lag){
		cases[j] ~ dnegbin(1/2, 1)
		ker[j] ~ dunif(0, 10)
	}

	for (j in 1:max){
		# _FOICHAIN_ is a magic word that's expanded in the autobug
		caseMean[j] <- FOICHAIN
		caseRate[j] <- incShape/(caseMean[j]+0.01)
		expCases[j] ~ dgamma(incShape, caseRate[j])
		cases[lag+j] ~ dpois(expCases[j])

		rep[j] ~ dbeta(repShape/repMean, repShape/(1-repMean))
		obs[j] ~ dbin(rep[j], cases[lag+j])
	}

	R0 <- sum(ker)
	gtot <- inprod(lagvec, ker)
	gen <- (gtot/R0)
}
